pipeline {
    agent { docker { image 'python:3-alpine' } }
    stages {
        stage('Git') {
            steps{
                git 'https://github.com/jonbir3/easy_learn_social_network.git'
            }
        }
        stage('Requirements'){
            steps{
                withEnv(["HOME=${env.WORKSPACE}"]) {
                    sh 'pip3 install --user -r requirements.txt'
                }
            }
        }
        stage('Run Tests'){
            steps{
                withEnv(["HOME=${env.WORKSPACE}"]) {
                    withCredentials([string(credentialsId: 'SECRET_KEY', variable: 'EASY_LEARN_PROJECT_SK')]) {
                        echo 'Testing...'
                        sh """
                            python3 manage.py makemigrations users
                            python3 manage.py makemigrations posts
                            python3 manage.py makemigrations chat
                            python3 manage.py makemigrations files
                            python3 manage.py migrate
                            python3 manage.py jenkins --enable-coverage
                        """
					}

                }
            }

        }
        stage('Test Results') {
            steps{
                echo 'Printing users test results...'
                junit 'reports/junit.xml'
            }
        }
        stage('Code Coverage Results') {
            steps{
                publishCoverage adapters: [coberturaAdapter('reports/coverage.xml')], sourceFileResolver: sourceFiles('NEVER_STORE')
            }
        }
        stage('Pep8 Results') {
            steps{
                recordIssues(tools: [pep8(pattern: 'reports/pep8.report')])
            }
        }
        stage('Pylint Results') {
            steps{
                recordIssues(tools: [pyLint(pattern: 'reports/pylint.report')])
            }
        }
        stage('Pyflakes Results') {
            steps{
                recordIssues(tools: [flake8(pattern: 'reports/pyflakes.report')])
            }
        }
    }
    post {
        failure {
            sh 'python3 send_mail.py "Jenkins Build Failure" "The last build failed, check it!"'
            //mail bcc: '', body: 'The last build failed, check it!', cc: 'mayhagbi@gmail.com, shlomitofahi@gmail.com', from: 'jonbir2@gmail.com', replyTo: '', subject: 'Jenkins Build Failure', to: 'jonbir2@gmail.com'
        }
    }
}
