pipeline {
    agent { docker { image 'python:3-alpine' } }
    stages {
        stage('Git') {
            steps{
                git 'https://github.com/jonbir3/easy_learn_social_network.git'
            }
        }
        stage('Requirements'){
            steps{
                withEnv(["HOME=${env.WORKSPACE}"]) {
                    sh 'pip3 install --user -r requirements.txt'
                }
            }
        }
        stage('Run Tests'){
            steps{
                withEnv(["HOME=${env.WORKSPACE}"]) {
                    withCredentials([string(credentialsId: 'SECRET_KEY', variable: 'EASY_LEARN_PROJECT_SK')]) {
                        echo 'Testing...'
                        sh """
                            python3 manage.py makemigrations users
                            python3 manage.py makemigrations posts
                            python3 manage.py makemigrations chat
                            python3 manage.py makemigrations files
                            python3 manage.py migrate
                            python3 manage.py jenkins --enable-coverage
                        """
					}

                }
            }

        }
        stage('Results') {
            steps{
                echo 'Printing users test results...'
                junit 'reports/junit.xml'
                publishCoverage adapters: [coberturaAdapter('reports/coverage.xml')], sourceFileResolver: sourceFiles('NEVER_STORE')
            }
        }

        stage ('Analysis') {
            def mvnHome = tool 'mvn-default'

            sh "${mvnHome}/bin/mvn -batch-mode -V -U -e checkstyle:checkstyle pmd:pmd pmd:cpd findbugs:findbugs spotbugs:spotbugs"

            def checkstyle = scanForIssues tool: [$class: 'CheckStyle'], pattern: '**/target/checkstyle-result.xml'
            publishIssues issues:[checkstyle]

            def pmd = scanForIssues tool: [$class: 'Pmd'], pattern: '**/target/pmd.xml'
            publishIssues issues:[pmd]

            def cpd = scanForIssues tool: [$class: 'Cpd'], pattern: '**/target/cpd.xml'
            publishIssues issues:[cpd]

            def findbugs = scanForIssues tool: [$class: 'FindBugs'], pattern: '**/target/findbugsXml.xml'
            publishIssues issues:[findbugs]

            def spotbugs = scanForIssues tool: [$class: 'SpotBugs'], pattern: '**/target/spotbugsXml.xml'
            publishIssues issues:[spotbugs]
    }

        // post {
        //    failure {
        //        mail bcc: '', body: 'The last build failed, check it!', cc: 'mayhagbi@gmail.com, shlomitofahi@gmail.com', from: '', replyTo: '', subject: 'Jenkins Build Failure', to: 'jonbir2@gmail.com'
        //    }
        //}
    }
}
